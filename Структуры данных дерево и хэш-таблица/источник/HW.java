

public class HW {

    // 1. Реализовать поиск максимального элемента в дереве. Метод назвать findLast:
        // Это легко, используем код для ластФест, заменяя на Ласт
    // 2. Реализовать подсчет листьев. Листья - это такие узлы дерева, у которых нет дочерних элементов. Метод назвать getChildrenCount
        // Рекурсивно проверяем каждую ноду на отсуствие лефта, и если да, проверяем отсутствие райта - если да, увеличиваем счетчик.
        // если лефт или райт - существует, тогда рекурсивно перемещаемся на него.
    // 3. *Реализовать проверку, является ли дерево сбалансированным. Метод назвать isBalanced() и он должен возвращать true\false
    // Дерево назвается сбалансированным, если высота левого и правого поддерева отличается не больше, чем на 1
    // Для каждого корня проверить сбалансированность левого и правого подеревьев
    // isBalanced() {
    //   return isBalanced(root.left) && isBalanced(root.right)
    //   && Math.abs(height(root.left) - height(root.right)) <= 1
    // }
    // private int height(Node current) {
    //      // вот это нужно реализовать
    // }

    //             8
    //      6             10
    //  3
    //1
}
